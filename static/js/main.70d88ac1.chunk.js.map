{"version":3,"sources":["components/Navbar.js","api/Api.js","assets/vs.png","components/MyCard.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","color","position","Toolbar","IconButton","Typography","variant","API_KEY","MyCard","match","useState","detail","setDetail","open","setopen","handleClick","id","url","fetch","then","response","json","catch","error","console","log","getMatchDetail","data","handleOpen","handleClose","Card","className","style","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","width","src","vsimg","alt","CardActions","Button","onClick","unique_id","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autoFocus","App","matches","setMatches","useEffect","getMatches","alert","marginBottom","sm","map","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70d88ac1.chunk.js","sourcesContent":["import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <AppBar color=\"secondary\" position=\"static\">\r\n      <Toolbar>\r\n        <IconButton color=\"inherit\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\">Live Score</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n/*\r\nisme appbar toolbar  typography sb material ui se lia hai...typography is used for  entering text\r\ntoolbar se neeli line aai upar ...aur live score humne typography se likha hai\r\n\r\niconbutton se hum icon use kr paate hai...fir menuicon se hum top left me menu icon use krrhe hai\r\n// inherit se white color milega\r\n\r\n\r\n\r\n*/\r\n","const API_KEY = \"EXmHjMoridR8SsL87VYlChY6N5c2\";\r\n\r\n//get all the upcoming matches\r\n\r\nexport const getMatches = () => {\r\n  const url = `https://cricapi.com/api/matches/?apikey=${API_KEY}`;\r\n\r\n  //is url se hume maches milenge...crci api website s ejo hume mila hai\r\n  //?apikey=${API_KEY} hume api ke bhi bhejni hai to ye bhi likha hai...API_KEY\r\n  //me humne upar value daaali hui hai\r\n\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => {\r\n      console.log(\"ERROR : \", error);\r\n    });\r\n};\r\n\r\n/*\r\ndata return krne ke liye fetch ka use kia...get matches function koon jaha bhi use krenge waha hume\r\ndata mil jayea...url pass kia hai usme agr success hua to .then ki condition agr fail to .this catch ki condition\r\n\r\nthen me uhm log jo bhi data aayega usko json ki file me convert krrhe hai kyuki bhaiay ne bhi bataya tha ki shaayd\r\nsirf txt file hi hoti hai isme firebase in sbme eg .json\r\n\r\n*/\r\n\r\n//load match details\r\nexport const getMatchDetail = (id) => {\r\n  const url = `https://cricapi.com/api/cricketScore?unique_id=${id}&apikey=${API_KEY}`; //url me humne cricket score daal dia matches i jagah ...aur hume ha pe apikey bhi chahiye the to wo bhi le liya hai\r\n\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.log(error));\r\n  //ab ye pichle baar ki trh same hai\r\n};\r\n\r\n//ab is function ko hume show detail waale button me use krenge...ab mycard me gye hum log\r\n","export default __webpack_public_path__ + \"static/media/vs.7419083b.png\";","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { getMatchDetail } from \"../api/Api\";\r\nimport { useState } from \"react\";\r\nimport vsimg from \"../assets/vs.png\";\r\n\r\nconst MyCard = ({ match }) => {\r\n  const [detail, setDetail] = useState({});\r\n\r\n  const [open, setopen] = useState(false);\r\n  //ye dialogue box open close hone ke liye banaya ja rha hai ...by default close hoga\r\n\r\n  const handleClick = (id) => {\r\n    getMatchDetail(id)\r\n      .then((data) => {\r\n        console.log(\"MATCH DATA\", data);\r\n\r\n        setDetail(data); //button click hote hai isme match ki details aajayengi\r\n        handleOpen(); //isse jb handleclick chalega tb ye handle open run krega\r\n      })\r\n\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const getMatchCart = () => {\r\n    return (\r\n      <Card className=\"card-style\" style={{ marginTop: 15 }}>\r\n        <CardContent>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n            <Grid item>\r\n              <Typography className=\"team-name\" variant=\"h5\">\r\n                {match[\"team-1\"]}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <img\r\n                style={{ width: 85 }}\r\n                // src={require(\"../assets/vs.png\")}\r\n                src={vsimg}\r\n                alt=\"\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Typography className=\"team-name\" variant=\"h5\">\r\n                {match[\"team-2\"]}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              onClick={() => {\r\n                handleClick(match.unique_id);\r\n              }}\r\n              item\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Show Details\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 5 }} //hr button ke left me thoda sa space aayga\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Start Time{new Date(match.dateTimeGMT).toLocaleString()}\r\n            </Button>\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setopen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setopen(true);\r\n  };\r\n\r\n  const getDialog = () => (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Match Details\"}</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <Typography>{detail.stat}</Typography>\r\n          <Typography>\r\n            Match\r\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n              {detail.matchStarted ? \" Started\" : \" not Started\"}\r\n            </span>\r\n            <Typography>\r\n              Score\r\n              <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n                {detail.score}\r\n              </span>\r\n            </Typography>\r\n          </Typography>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n  /* material ui se dialog banaya hai yha pe \r\n   <Dialog open={open} onClose={handleClose}>  close hone pe ek funcitoin aur chalaya hai\r\n  //by default open krna hai to open ki jagah true llikho...wrna open hi likho\r\n\r\n     <Typography>{detail.stat}</Typography> isse hume match ka status milega...ye stat api me pehle se isi naam se dia tha..to dekh skte \r\n     ho console me ek baar\r\n\r\n{detail.matchStarted ? \"Match Started\" : \"Match not Started\"}\r\nmatchstarted bhi api me use kia hua hai...agr ye true hai  to hum Match stated likhenge\r\n  \r\n{detail.score}  ye score print krne ke liye hai\r\n\r\n\r\n*/\r\n\r\n  return (\r\n    <fragment>\r\n      {getMatchCart()}\r\n      {getDialog()}\r\n    </fragment>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n\r\n/*\r\n<Card>\r\n\r\n<CardContent>\r\n    <Typography>hs is a card</Typography>\r\n</CardContent>\r\n\r\n</Card>\r\nye saare ui component hai\r\n\r\n{new Date().toString()} iise abhi ka datee and time aagya\r\n\r\ncard ke andar data ke liye card content use krna sahi hai\r\n\r\n\r\ngrid se hum log cheezo ko parallel le aarhe hai \r\n\r\n\r\n\r\nconst MyCard = ({ match }) => { \r\n  is trh se match likhne se match ki value app.js se jo humne ek key ki trh pass \r\n  ki thi vese aagai yha pe \r\n\r\n\r\n\r\n\r\n  {match[\"team-1\"]}\r\n  ye app . js se aarha hai....ye bascically har match me team1 ka naam hai...se hi chalega ye loop\r\n  hr araaay me team1 me konnsa naam hai wo value\r\n\r\n\r\n Start Time{new Date(match.dateTimeGMT).toLocaleString()}\r\n isme match to hume app.js se aarha hain data ...agr console me dekhe to har matdch me ek \r\n variable hia dateTimeGmt jisme time se related data hai...to usko ye liya yha aur local strting me convert krdia\r\n\r\n\r\n onClick={() => {\r\n                handleClick(match.unique_id);\r\n                show detail waale button me hum log is function ko paas krenge jisme hum hr match ki unique id use krrhe hai\r\n\r\nupar handleclick me hum log getMatchDetail(id) is functon me id paas krrhe hai...ye promise dega to then aur catch use krenge\r\n\r\n\r\n\r\n*/\r\n","import React, { Fragment, useEffect } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\n//import { Button } from \"@material-ui/core\";\nimport Navbar from \"./components/Navbar\";\nimport MyCard from \"./components/MyCard\";\nimport { getMatches } from \"./api/Api\";\nimport { useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nfunction App() {\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    getMatches()\n      .then((data) => {\n        setMatches(data.matches);\n        console.log(data.matches);\n      })\n      .catch((error) => alert(\"could not load the data\"));\n  }, []);\n\n  /*\njese hi app fucnton render hoga ye useeffect function chalega and getmatches call hojayega\nisme data api.jsse aarha hai\n*/\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n\n      <Typography variant=\"h3\" style={{ marginTop: 40, marginBottom: 40 }}>\n        Abhi Buzz\n      </Typography>\n\n      <Grid container>\n        <Grid sm=\"2\"></Grid>\n        <Grid sm=\"8\">\n          {matches.map((match) => (\n            <Fragment key={match.unique_id}>\n              {match.type === \"Twenty20\" ? (\n                <MyCard key={match.unique_id} match={match} />\n              ) : (\n                \"\"\n              )}\n            </Fragment>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nye humne matrial uin ki help se lia hai...jiska variant outlined ya contained kuch bhi hai\n <Button variant=\"contained\" color=\"primary\">CLick</Button> ye color ye sb hume material ui se pta chala\n\n\n  <Navbar />  isk mtlb hai ki navbar hume wo dega yaha jo navbar.js me humne return me daala hai\n\n getMatches()\n      .then((data) => setMatches(data.matches))\n      iski wajah se usestate wale me matches array me saare matches ki details aajayegi\n\n\n {matches.map((match) => (\n        <MyCard match=\"match\" /> \n        isse matches array me loop lag gya aur hr baar ek match pass horha hai mycard me\n\n <Grid sm=\"6\"> iska mtlb hume small ke upar 6 grid chahiye\n\n\n\n {match.type == \"Twenty20\" ? (\n                <MyCard key={match.unique_id} match={match} />\n              ) : (\n                \"\"\n              )}\n              kuch ni hai ye bs ternary operator lga hua hai...baaki normal hi hai\n\n\n\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}